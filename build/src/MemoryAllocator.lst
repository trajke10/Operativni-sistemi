GAS LISTING /tmp/ccBvXSZl.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN8MemAlloc13bytesToBlocksEm
   9              	_ZN8MemAlloc13bytesToBlocksEm:
  10              	.LFB7:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by os on 8/3/23.
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.h"
   6:src/MemoryAllocator.cpp **** #include "../lib/mem.h"
   7:src/MemoryAllocator.cpp **** #include "../lib/console.h"
   8:src/MemoryAllocator.cpp **** 
   9:src/MemoryAllocator.cpp **** void* MemAlloc::mem_alloc(size_t sz) {
  10:src/MemoryAllocator.cpp ****     void* ret=nullptr;
  11:src/MemoryAllocator.cpp ****     for(FreeSeg* tmp=headFree;tmp;tmp=tmp->next) {
  12:src/MemoryAllocator.cpp ****         if (tmp->szBl < sz) continue;
  13:src/MemoryAllocator.cpp ****         if (tmp->szBl == sz) {
  14:src/MemoryAllocator.cpp ****             if (tmp->prev) tmp->prev->next = tmp->next;
  15:src/MemoryAllocator.cpp ****             if (tmp->next) tmp->next->prev = tmp->prev;
  16:src/MemoryAllocator.cpp ****             if (tmp == headFree) headFree = headFree->next;
  17:src/MemoryAllocator.cpp ****         } else {
  18:src/MemoryAllocator.cpp ****             FreeSeg *newSeg = (FreeSeg *) ((uint8 *) tmp + sz * MEM_BLOCK_SIZE + sizeof(FreeSeg));
  19:src/MemoryAllocator.cpp ****             newSeg->next = tmp->next;
  20:src/MemoryAllocator.cpp ****             newSeg->prev = tmp->prev;
  21:src/MemoryAllocator.cpp ****             newSeg->szBy = tmp->szBy - sz * MEM_BLOCK_SIZE - sizeof(FreeSeg);
  22:src/MemoryAllocator.cpp ****             newSeg->szBl = bytesToBlocks(newSeg->szBy - sizeof(FreeSeg));
  23:src/MemoryAllocator.cpp ****             if (tmp->prev) tmp->prev->next = newSeg;
  24:src/MemoryAllocator.cpp ****             if (tmp->next) tmp->next->prev = newSeg;
  25:src/MemoryAllocator.cpp ****             if (tmp == headFree) headFree = newSeg;
  26:src/MemoryAllocator.cpp ****         }
  27:src/MemoryAllocator.cpp ****         tmp->szBy = sz * MEM_BLOCK_SIZE + sizeof(FreeSeg);
  28:src/MemoryAllocator.cpp ****         tmp->szBl = sz;
  29:src/MemoryAllocator.cpp ****         ret = (uint8 *) tmp + sizeof(FreeSeg);
  30:src/MemoryAllocator.cpp ****         break;
  31:src/MemoryAllocator.cpp ****     }
  32:src/MemoryAllocator.cpp ****     return ret;
  33:src/MemoryAllocator.cpp **** }
  34:src/MemoryAllocator.cpp **** 
  35:src/MemoryAllocator.cpp **** int MemAlloc::mem_free(void *addr){
  36:src/MemoryAllocator.cpp ****     if(addr<HEAP_START_ADDR || addr>=HEAP_END_ADDR) return -1; //uopste ne pripada dinamickoj zoni
  37:src/MemoryAllocator.cpp ****     for(FreeSeg* tmp=headFree;tmp;tmp=tmp->next){
  38:src/MemoryAllocator.cpp ****         if((uint8*)addr>=(uint8*)tmp && (uint8*)addr<(uint8*)tmp+tmp->szBy)
  39:src/MemoryAllocator.cpp ****             return -2; // nije alociran da bi se dealocirao
  40:src/MemoryAllocator.cpp ****     }
  41:src/MemoryAllocator.cpp ****     //ispravan poziv
  42:src/MemoryAllocator.cpp ****     FreeSeg* newSeg=(FreeSeg*)((uint8 *)addr-sizeof(FreeSeg));
  43:src/MemoryAllocator.cpp ****     if(!headFree) {
  44:src/MemoryAllocator.cpp ****         headFree=newSeg;
  45:src/MemoryAllocator.cpp ****         headFree->next= nullptr;
  46:src/MemoryAllocator.cpp ****         headFree->prev= nullptr;
  47:src/MemoryAllocator.cpp ****         return 0;
GAS LISTING /tmp/ccBvXSZl.s 			page 2


  48:src/MemoryAllocator.cpp ****     }
  49:src/MemoryAllocator.cpp ****     if(newSeg<headFree){
  50:src/MemoryAllocator.cpp ****         newSeg->next=headFree;
  51:src/MemoryAllocator.cpp ****         headFree->prev=newSeg;
  52:src/MemoryAllocator.cpp ****         headFree=newSeg;
  53:src/MemoryAllocator.cpp ****     }else{
  54:src/MemoryAllocator.cpp ****         FreeSeg *tmp;
  55:src/MemoryAllocator.cpp ****         for (tmp = headFree; tmp->next ; tmp = tmp->next){
  56:src/MemoryAllocator.cpp ****             if((uint8 *) newSeg > (uint8*) tmp &&
  57:src/MemoryAllocator.cpp ****                (uint8* ) newSeg < (uint8*) tmp->next) break;
  58:src/MemoryAllocator.cpp ****         }
  59:src/MemoryAllocator.cpp ****         newSeg->next = tmp->next;
  60:src/MemoryAllocator.cpp ****         newSeg->prev = tmp;
  61:src/MemoryAllocator.cpp ****         tmp->next = newSeg;
  62:src/MemoryAllocator.cpp ****         if (newSeg->next) newSeg->next->prev = newSeg;
  63:src/MemoryAllocator.cpp ****     }
  64:src/MemoryAllocator.cpp ****     tryToMerge(newSeg);
  65:src/MemoryAllocator.cpp ****     return 0;
  66:src/MemoryAllocator.cpp **** }
  67:src/MemoryAllocator.cpp **** 
  68:src/MemoryAllocator.cpp **** void MemAlloc::tryToMerge(FreeSeg* seg) {
  69:src/MemoryAllocator.cpp ****     //spajanje sa onim pre
  70:src/MemoryAllocator.cpp ****     if(seg->prev && (uint8 *)seg->prev+seg->prev->szBy==(uint8 *)seg) {
  71:src/MemoryAllocator.cpp ****         seg->prev->szBy+=seg->szBy;
  72:src/MemoryAllocator.cpp ****         seg->prev->szBl=bytesToBlocks(seg->prev->szBy-sizeof(FreeSeg));
  73:src/MemoryAllocator.cpp ****         seg->prev->next=seg->next;
  74:src/MemoryAllocator.cpp ****         if(seg->next) seg->next->prev=seg->prev;
  75:src/MemoryAllocator.cpp ****         seg=seg->prev;
  76:src/MemoryAllocator.cpp ****     }
  77:src/MemoryAllocator.cpp ****     //spajanje sa onim posle
  78:src/MemoryAllocator.cpp ****     if(seg->next && (uint8 *)seg+seg->szBy==(uint8 *)seg->next) {
  79:src/MemoryAllocator.cpp ****         seg->szBy += seg->next->szBy;
  80:src/MemoryAllocator.cpp ****         seg->szBl=bytesToBlocks(seg->szBy-sizeof(FreeSeg));
  81:src/MemoryAllocator.cpp ****         seg->next=seg->next->next;
  82:src/MemoryAllocator.cpp ****         if(seg->next) seg->next->prev=seg;
  83:src/MemoryAllocator.cpp ****     }
  84:src/MemoryAllocator.cpp **** }
  85:src/MemoryAllocator.cpp **** 
  86:src/MemoryAllocator.cpp **** size_t MemAlloc::bytesToBlocks(size_t s) {
  12              		.loc 1 86 42
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  87:src/MemoryAllocator.cpp ****     return s/MEM_BLOCK_SIZE;
  21              		.loc 1 87 5
  88:src/MemoryAllocator.cpp **** }
  22              		.loc 1 88 1 is_stmt 0
  23 000c 13556500 		srli	a0,a0,6
  24              	.LVL1:
  25 0010 03348100 		ld	s0,8(sp)
  26              		.cfi_restore 8
  27              		.cfi_def_cfa 2, 16
GAS LISTING /tmp/ccBvXSZl.s 			page 3


  28 0014 13010101 		addi	sp,sp,16
  29              		.cfi_def_cfa_offset 0
  30 0018 67800000 		jr	ra
  31              		.cfi_endproc
  32              	.LFE7:
  34              		.align	2
  35              		.globl	_ZN8MemAlloc9mem_allocEm
  37              	_ZN8MemAlloc9mem_allocEm:
  38              	.LFB4:
   9:src/MemoryAllocator.cpp ****     void* ret=nullptr;
  39              		.loc 1 9 38 is_stmt 1
  40              		.cfi_startproc
  41              	.LVL2:
  42 001c 130101FD 		addi	sp,sp,-48
  43              		.cfi_def_cfa_offset 48
  44 0020 23341102 		sd	ra,40(sp)
  45 0024 23308102 		sd	s0,32(sp)
  46 0028 233C9100 		sd	s1,24(sp)
  47 002c 23382101 		sd	s2,16(sp)
  48 0030 23343101 		sd	s3,8(sp)
  49 0034 23304101 		sd	s4,0(sp)
  50              		.cfi_offset 1, -8
  51              		.cfi_offset 8, -16
  52              		.cfi_offset 9, -24
  53              		.cfi_offset 18, -32
  54              		.cfi_offset 19, -40
  55              		.cfi_offset 20, -48
  56 0038 13040103 		addi	s0,sp,48
  57              		.cfi_def_cfa 8, 0
  58 003c 130A0500 		mv	s4,a0
  59 0040 13890500 		mv	s2,a1
  10:src/MemoryAllocator.cpp ****     for(FreeSeg* tmp=headFree;tmp;tmp=tmp->next) {
  60              		.loc 1 10 5
  61              	.LVL3:
  11:src/MemoryAllocator.cpp ****         if (tmp->szBl < sz) continue;
  62              		.loc 1 11 5
  63              	.LBB2:
  11:src/MemoryAllocator.cpp ****         if (tmp->szBl < sz) continue;
  64              		.loc 1 11 18 is_stmt 0
  65 0044 83340500 		ld	s1,0(a0)
  66              	.LVL4:
  67              	.L6:
  11:src/MemoryAllocator.cpp ****         if (tmp->szBl < sz) continue;
  68              		.loc 1 11 31 is_stmt 1 discriminator 1
  69 0048 63800408 		beqz	s1,.L3
  70              	.LBB3:
  12:src/MemoryAllocator.cpp ****         if (tmp->szBl == sz) {
  71              		.loc 1 12 9
  12:src/MemoryAllocator.cpp ****         if (tmp->szBl == sz) {
  72              		.loc 1 12 18 is_stmt 0
  73 004c 83B70401 		ld	a5,16(s1)
  12:src/MemoryAllocator.cpp ****         if (tmp->szBl == sz) {
  74              		.loc 1 12 9
  75 0050 63EE2709 		bltu	a5,s2,.L14
  13:src/MemoryAllocator.cpp ****             if (tmp->prev) tmp->prev->next = tmp->next;
  76              		.loc 1 13 9 is_stmt 1
  77              	.LBB4:
GAS LISTING /tmp/ccBvXSZl.s 			page 4


  78 0054 6380270B 		beq	a5,s2,.L15
  79              	.LBB5:
  18:src/MemoryAllocator.cpp ****             newSeg->next = tmp->next;
  80              		.loc 1 18 13
  18:src/MemoryAllocator.cpp ****             newSeg->next = tmp->next;
  81              		.loc 1 18 63 is_stmt 0
  82 0058 93176900 		slli	a5,s2,6
  18:src/MemoryAllocator.cpp ****             newSeg->next = tmp->next;
  83              		.loc 1 18 80
  84 005c 93890702 		addi	s3,a5,32
  18:src/MemoryAllocator.cpp ****             newSeg->next = tmp->next;
  85              		.loc 1 18 22
  86 0060 B3893401 		add	s3,s1,s3
  87              	.LVL5:
  19:src/MemoryAllocator.cpp ****             newSeg->prev = tmp->prev;
  88              		.loc 1 19 13 is_stmt 1
  19:src/MemoryAllocator.cpp ****             newSeg->prev = tmp->prev;
  89              		.loc 1 19 33 is_stmt 0
  90 0064 03B78400 		ld	a4,8(s1)
  19:src/MemoryAllocator.cpp ****             newSeg->prev = tmp->prev;
  91              		.loc 1 19 26
  92 0068 23B4E900 		sd	a4,8(s3)
  20:src/MemoryAllocator.cpp ****             newSeg->szBy = tmp->szBy - sz * MEM_BLOCK_SIZE - sizeof(FreeSeg);
  93              		.loc 1 20 13 is_stmt 1
  20:src/MemoryAllocator.cpp ****             newSeg->szBy = tmp->szBy - sz * MEM_BLOCK_SIZE - sizeof(FreeSeg);
  94              		.loc 1 20 33 is_stmt 0
  95 006c 03B70400 		ld	a4,0(s1)
  20:src/MemoryAllocator.cpp ****             newSeg->szBy = tmp->szBy - sz * MEM_BLOCK_SIZE - sizeof(FreeSeg);
  96              		.loc 1 20 26
  97 0070 23B0E900 		sd	a4,0(s3)
  21:src/MemoryAllocator.cpp ****             newSeg->szBl = bytesToBlocks(newSeg->szBy - sizeof(FreeSeg));
  98              		.loc 1 21 13 is_stmt 1
  21:src/MemoryAllocator.cpp ****             newSeg->szBl = bytesToBlocks(newSeg->szBy - sizeof(FreeSeg));
  99              		.loc 1 21 33 is_stmt 0
 100 0074 03B58401 		ld	a0,24(s1)
 101              	.LVL6:
  21:src/MemoryAllocator.cpp ****             newSeg->szBl = bytesToBlocks(newSeg->szBy - sizeof(FreeSeg));
 102              		.loc 1 21 38
 103 0078 3305F540 		sub	a0,a0,a5
  21:src/MemoryAllocator.cpp ****             newSeg->szBl = bytesToBlocks(newSeg->szBy - sizeof(FreeSeg));
 104              		.loc 1 21 60
 105 007c 930705FE 		addi	a5,a0,-32
  21:src/MemoryAllocator.cpp ****             newSeg->szBl = bytesToBlocks(newSeg->szBy - sizeof(FreeSeg));
 106              		.loc 1 21 26
 107 0080 23BCF900 		sd	a5,24(s3)
  22:src/MemoryAllocator.cpp ****             if (tmp->prev) tmp->prev->next = newSeg;
 108              		.loc 1 22 13 is_stmt 1
  22:src/MemoryAllocator.cpp ****             if (tmp->prev) tmp->prev->next = newSeg;
 109              		.loc 1 22 41 is_stmt 0
 110 0084 130505FC 		addi	a0,a0,-64
 111 0088 97000000 		call	_ZN8MemAlloc13bytesToBlocksEm
 111      E7800000 
 112              	.LVL7:
  22:src/MemoryAllocator.cpp ****             if (tmp->prev) tmp->prev->next = newSeg;
 113              		.loc 1 22 26
 114 0090 23B8A900 		sd	a0,16(s3)
  23:src/MemoryAllocator.cpp ****             if (tmp->next) tmp->next->prev = newSeg;
GAS LISTING /tmp/ccBvXSZl.s 			page 5


 115              		.loc 1 23 13 is_stmt 1
  23:src/MemoryAllocator.cpp ****             if (tmp->next) tmp->next->prev = newSeg;
 116              		.loc 1 23 22 is_stmt 0
 117 0094 83B70400 		ld	a5,0(s1)
  23:src/MemoryAllocator.cpp ****             if (tmp->next) tmp->next->prev = newSeg;
 118              		.loc 1 23 13
 119 0098 63840700 		beqz	a5,.L11
  23:src/MemoryAllocator.cpp ****             if (tmp->next) tmp->next->prev = newSeg;
 120              		.loc 1 23 28 is_stmt 1 discriminator 1
  23:src/MemoryAllocator.cpp ****             if (tmp->next) tmp->next->prev = newSeg;
 121              		.loc 1 23 44 is_stmt 0 discriminator 1
 122 009c 23B43701 		sd	s3,8(a5)
 123              	.L11:
  24:src/MemoryAllocator.cpp ****             if (tmp == headFree) headFree = newSeg;
 124              		.loc 1 24 13 is_stmt 1
  24:src/MemoryAllocator.cpp ****             if (tmp == headFree) headFree = newSeg;
 125              		.loc 1 24 22 is_stmt 0
 126 00a0 83B78400 		ld	a5,8(s1)
  24:src/MemoryAllocator.cpp ****             if (tmp == headFree) headFree = newSeg;
 127              		.loc 1 24 13
 128 00a4 63840700 		beqz	a5,.L12
  24:src/MemoryAllocator.cpp ****             if (tmp == headFree) headFree = newSeg;
 129              		.loc 1 24 28 is_stmt 1 discriminator 1
  24:src/MemoryAllocator.cpp ****             if (tmp == headFree) headFree = newSeg;
 130              		.loc 1 24 44 is_stmt 0 discriminator 1
 131 00a8 23B03701 		sd	s3,0(a5)
 132              	.L12:
  25:src/MemoryAllocator.cpp ****         }
 133              		.loc 1 25 13 is_stmt 1
  25:src/MemoryAllocator.cpp ****         }
 134              		.loc 1 25 24 is_stmt 0
 135 00ac 83370A00 		ld	a5,0(s4)
  25:src/MemoryAllocator.cpp ****         }
 136              		.loc 1 25 13
 137 00b0 638C9706 		beq	a5,s1,.L16
 138              	.LVL8:
 139              	.L10:
 140              	.LBE5:
 141              	.LBE4:
  27:src/MemoryAllocator.cpp ****         tmp->szBl = sz;
 142              		.loc 1 27 9 is_stmt 1
  27:src/MemoryAllocator.cpp ****         tmp->szBl = sz;
 143              		.loc 1 27 24 is_stmt 0
 144 00b4 93176900 		slli	a5,s2,6
  27:src/MemoryAllocator.cpp ****         tmp->szBl = sz;
 145              		.loc 1 27 41
 146 00b8 93870702 		addi	a5,a5,32
  27:src/MemoryAllocator.cpp ****         tmp->szBl = sz;
 147              		.loc 1 27 19
 148 00bc 23BCF400 		sd	a5,24(s1)
  28:src/MemoryAllocator.cpp ****         ret = (uint8 *) tmp + sizeof(FreeSeg);
 149              		.loc 1 28 9 is_stmt 1
  28:src/MemoryAllocator.cpp ****         ret = (uint8 *) tmp + sizeof(FreeSeg);
 150              		.loc 1 28 19 is_stmt 0
 151 00c0 23B82401 		sd	s2,16(s1)
  29:src/MemoryAllocator.cpp ****         break;
 152              		.loc 1 29 9 is_stmt 1
GAS LISTING /tmp/ccBvXSZl.s 			page 6


  29:src/MemoryAllocator.cpp ****         break;
 153              		.loc 1 29 13 is_stmt 0
 154 00c4 93840402 		addi	s1,s1,32
 155              	.LVL9:
  30:src/MemoryAllocator.cpp ****     }
 156              		.loc 1 30 9 is_stmt 1
 157              	.LBE3:
 158              	.LBE2:
  32:src/MemoryAllocator.cpp **** }
 159              		.loc 1 32 5
 160              	.L3:
  33:src/MemoryAllocator.cpp **** 
 161              		.loc 1 33 1 is_stmt 0
 162 00c8 13850400 		mv	a0,s1
 163 00cc 83308102 		ld	ra,40(sp)
 164              		.cfi_remember_state
 165              		.cfi_restore 1
 166 00d0 03340102 		ld	s0,32(sp)
 167              		.cfi_restore 8
 168              		.cfi_def_cfa 2, 48
 169 00d4 83348101 		ld	s1,24(sp)
 170              		.cfi_restore 9
 171 00d8 03390101 		ld	s2,16(sp)
 172              		.cfi_restore 18
 173              	.LVL10:
 174 00dc 83398100 		ld	s3,8(sp)
 175              		.cfi_restore 19
 176 00e0 033A0100 		ld	s4,0(sp)
 177              		.cfi_restore 20
 178              	.LVL11:
 179 00e4 13010103 		addi	sp,sp,48
 180              		.cfi_def_cfa_offset 0
 181 00e8 67800000 		jr	ra
 182              	.LVL12:
 183              	.L14:
 184              		.cfi_restore_state
 185              	.LBB10:
 186              	.LBB8:
  12:src/MemoryAllocator.cpp ****         if (tmp->szBl == sz) {
 187              		.loc 1 12 29 is_stmt 1 discriminator 1
 188              	.LBE8:
  11:src/MemoryAllocator.cpp ****         if (tmp->szBl < sz) continue;
 189              		.loc 1 11 5 discriminator 1
  11:src/MemoryAllocator.cpp ****         if (tmp->szBl < sz) continue;
 190              		.loc 1 11 38 is_stmt 0 discriminator 1
 191 00ec 83B48400 		ld	s1,8(s1)
 192              	.LVL13:
  11:src/MemoryAllocator.cpp ****         if (tmp->szBl < sz) continue;
 193              		.loc 1 11 5 discriminator 1
 194 00f0 6FF09FF5 		j	.L6
 195              	.L15:
 196              	.LBB9:
 197              	.LBB7:
  14:src/MemoryAllocator.cpp ****             if (tmp->next) tmp->next->prev = tmp->prev;
 198              		.loc 1 14 13 is_stmt 1
  14:src/MemoryAllocator.cpp ****             if (tmp->next) tmp->next->prev = tmp->prev;
 199              		.loc 1 14 22 is_stmt 0
GAS LISTING /tmp/ccBvXSZl.s 			page 7


 200 00f4 83B70400 		ld	a5,0(s1)
  14:src/MemoryAllocator.cpp ****             if (tmp->next) tmp->next->prev = tmp->prev;
 201              		.loc 1 14 13
 202 00f8 63860700 		beqz	a5,.L8
  14:src/MemoryAllocator.cpp ****             if (tmp->next) tmp->next->prev = tmp->prev;
 203              		.loc 1 14 28 is_stmt 1 discriminator 1
  14:src/MemoryAllocator.cpp ****             if (tmp->next) tmp->next->prev = tmp->prev;
 204              		.loc 1 14 51 is_stmt 0 discriminator 1
 205 00fc 03B78400 		ld	a4,8(s1)
  14:src/MemoryAllocator.cpp ****             if (tmp->next) tmp->next->prev = tmp->prev;
 206              		.loc 1 14 44 discriminator 1
 207 0100 23B4E700 		sd	a4,8(a5)
 208              	.L8:
  15:src/MemoryAllocator.cpp ****             if (tmp == headFree) headFree = headFree->next;
 209              		.loc 1 15 13 is_stmt 1
  15:src/MemoryAllocator.cpp ****             if (tmp == headFree) headFree = headFree->next;
 210              		.loc 1 15 22 is_stmt 0
 211 0104 83B78400 		ld	a5,8(s1)
  15:src/MemoryAllocator.cpp ****             if (tmp == headFree) headFree = headFree->next;
 212              		.loc 1 15 13
 213 0108 63860700 		beqz	a5,.L9
  15:src/MemoryAllocator.cpp ****             if (tmp == headFree) headFree = headFree->next;
 214              		.loc 1 15 28 is_stmt 1 discriminator 1
  15:src/MemoryAllocator.cpp ****             if (tmp == headFree) headFree = headFree->next;
 215              		.loc 1 15 51 is_stmt 0 discriminator 1
 216 010c 03B70400 		ld	a4,0(s1)
  15:src/MemoryAllocator.cpp ****             if (tmp == headFree) headFree = headFree->next;
 217              		.loc 1 15 44 discriminator 1
 218 0110 23B0E700 		sd	a4,0(a5)
 219              	.L9:
  16:src/MemoryAllocator.cpp ****         } else {
 220              		.loc 1 16 13 is_stmt 1
  16:src/MemoryAllocator.cpp ****         } else {
 221              		.loc 1 16 24 is_stmt 0
 222 0114 83370A00 		ld	a5,0(s4)
  16:src/MemoryAllocator.cpp ****         } else {
 223              		.loc 1 16 13
 224 0118 E39E97F8 		bne	a5,s1,.L10
  16:src/MemoryAllocator.cpp ****         } else {
 225              		.loc 1 16 34 is_stmt 1 discriminator 1
  16:src/MemoryAllocator.cpp ****         } else {
 226              		.loc 1 16 55 is_stmt 0 discriminator 1
 227 011c 83B78700 		ld	a5,8(a5)
  16:src/MemoryAllocator.cpp ****         } else {
 228              		.loc 1 16 43 discriminator 1
 229 0120 2330FA00 		sd	a5,0(s4)
 230 0124 6FF01FF9 		j	.L10
 231              	.LVL14:
 232              	.L16:
 233              	.LBB6:
  25:src/MemoryAllocator.cpp ****         }
 234              		.loc 1 25 34 is_stmt 1 discriminator 1
  25:src/MemoryAllocator.cpp ****         }
 235              		.loc 1 25 43 is_stmt 0 discriminator 1
 236 0128 23303A01 		sd	s3,0(s4)
 237 012c 6FF09FF8 		j	.L10
 238              	.LBE6:
GAS LISTING /tmp/ccBvXSZl.s 			page 8


 239              	.LBE7:
 240              	.LBE9:
 241              	.LBE10:
 242              		.cfi_endproc
 243              	.LFE4:
 245              		.align	2
 246              		.globl	_ZN8MemAlloc10tryToMergeEPNS_7FreeSegE
 248              	_ZN8MemAlloc10tryToMergeEPNS_7FreeSegE:
 249              	.LFB6:
  68:src/MemoryAllocator.cpp ****     //spajanje sa onim pre
 250              		.loc 1 68 41 is_stmt 1
 251              		.cfi_startproc
 252              	.LVL15:
 253 0130 130101FE 		addi	sp,sp,-32
 254              		.cfi_def_cfa_offset 32
 255 0134 233C1100 		sd	ra,24(sp)
 256 0138 23388100 		sd	s0,16(sp)
 257 013c 23349100 		sd	s1,8(sp)
 258 0140 23302101 		sd	s2,0(sp)
 259              		.cfi_offset 1, -8
 260              		.cfi_offset 8, -16
 261              		.cfi_offset 9, -24
 262              		.cfi_offset 18, -32
 263 0144 13040102 		addi	s0,sp,32
 264              		.cfi_def_cfa 8, 0
 265 0148 93840500 		mv	s1,a1
  70:src/MemoryAllocator.cpp ****         seg->prev->szBy+=seg->szBy;
 266              		.loc 1 70 5
  70:src/MemoryAllocator.cpp ****         seg->prev->szBy+=seg->szBy;
 267              		.loc 1 70 13 is_stmt 0
 268 014c 83B70500 		ld	a5,0(a1)
  70:src/MemoryAllocator.cpp ****         seg->prev->szBy+=seg->szBy;
 269              		.loc 1 70 5
 270 0150 63880700 		beqz	a5,.L18
  70:src/MemoryAllocator.cpp ****         seg->prev->szBy+=seg->szBy;
 271              		.loc 1 70 51 discriminator 1
 272 0154 03B78701 		ld	a4,24(a5)
  70:src/MemoryAllocator.cpp ****         seg->prev->szBy+=seg->szBy;
 273              		.loc 1 70 39 discriminator 1
 274 0158 B386E700 		add	a3,a5,a4
  70:src/MemoryAllocator.cpp ****         seg->prev->szBy+=seg->szBy;
 275              		.loc 1 70 18 discriminator 1
 276 015c 6388B602 		beq	a3,a1,.L22
 277              	.LVL16:
 278              	.L18:
  78:src/MemoryAllocator.cpp ****         seg->szBy += seg->next->szBy;
 279              		.loc 1 78 5 is_stmt 1
  78:src/MemoryAllocator.cpp ****         seg->szBy += seg->next->szBy;
 280              		.loc 1 78 13 is_stmt 0
 281 0160 03B98400 		ld	s2,8(s1)
  78:src/MemoryAllocator.cpp ****         seg->szBy += seg->next->szBy;
 282              		.loc 1 78 5
 283 0164 63080900 		beqz	s2,.L17
  78:src/MemoryAllocator.cpp ****         seg->szBy += seg->next->szBy;
 284              		.loc 1 78 39 discriminator 1
 285 0168 03B58401 		ld	a0,24(s1)
  78:src/MemoryAllocator.cpp ****         seg->szBy += seg->next->szBy;
GAS LISTING /tmp/ccBvXSZl.s 			page 9


 286              		.loc 1 78 33 discriminator 1
 287 016c B387A400 		add	a5,s1,a0
  78:src/MemoryAllocator.cpp ****         seg->szBy += seg->next->szBy;
 288              		.loc 1 78 18 discriminator 1
 289 0170 6300F906 		beq	s2,a5,.L23
 290              	.L17:
  84:src/MemoryAllocator.cpp **** 
 291              		.loc 1 84 1
 292 0174 83308101 		ld	ra,24(sp)
 293              		.cfi_remember_state
 294              		.cfi_restore 1
 295 0178 03340101 		ld	s0,16(sp)
 296              		.cfi_restore 8
 297              		.cfi_def_cfa 2, 32
 298 017c 83348100 		ld	s1,8(sp)
 299              		.cfi_restore 9
 300              	.LVL17:
 301 0180 03390100 		ld	s2,0(sp)
 302              		.cfi_restore 18
 303 0184 13010102 		addi	sp,sp,32
 304              		.cfi_def_cfa_offset 0
 305 0188 67800000 		jr	ra
 306              	.LVL18:
 307              	.L22:
 308              		.cfi_restore_state
  71:src/MemoryAllocator.cpp ****         seg->prev->szBl=bytesToBlocks(seg->prev->szBy-sizeof(FreeSeg));
 309              		.loc 1 71 9 is_stmt 1
  71:src/MemoryAllocator.cpp ****         seg->prev->szBl=bytesToBlocks(seg->prev->szBy-sizeof(FreeSeg));
 310              		.loc 1 71 31 is_stmt 0
 311 018c 83B68501 		ld	a3,24(a1)
  71:src/MemoryAllocator.cpp ****         seg->prev->szBl=bytesToBlocks(seg->prev->szBy-sizeof(FreeSeg));
 312              		.loc 1 71 24
 313 0190 3307D700 		add	a4,a4,a3
 314 0194 23BCE700 		sd	a4,24(a5)
  72:src/MemoryAllocator.cpp ****         seg->prev->next=seg->next;
 315              		.loc 1 72 9 is_stmt 1
  72:src/MemoryAllocator.cpp ****         seg->prev->next=seg->next;
 316              		.loc 1 72 44 is_stmt 0
 317 0198 03B90500 		ld	s2,0(a1)
  72:src/MemoryAllocator.cpp ****         seg->prev->next=seg->next;
 318              		.loc 1 72 50
 319 019c 03358901 		ld	a0,24(s2)
 320              	.LVL19:
  72:src/MemoryAllocator.cpp ****         seg->prev->next=seg->next;
 321              		.loc 1 72 38
 322 01a0 130505FE 		addi	a0,a0,-32
 323 01a4 97000000 		call	_ZN8MemAlloc13bytesToBlocksEm
 323      E7800000 
 324              	.LVL20:
  72:src/MemoryAllocator.cpp ****         seg->prev->next=seg->next;
 325              		.loc 1 72 24
 326 01ac 2338A900 		sd	a0,16(s2)
  73:src/MemoryAllocator.cpp ****         if(seg->next) seg->next->prev=seg->prev;
 327              		.loc 1 73 9 is_stmt 1
  73:src/MemoryAllocator.cpp ****         if(seg->next) seg->next->prev=seg->prev;
 328              		.loc 1 73 14 is_stmt 0
 329 01b0 03B70400 		ld	a4,0(s1)
GAS LISTING /tmp/ccBvXSZl.s 			page 10


  73:src/MemoryAllocator.cpp ****         if(seg->next) seg->next->prev=seg->prev;
 330              		.loc 1 73 30
 331 01b4 83B78400 		ld	a5,8(s1)
  73:src/MemoryAllocator.cpp ****         if(seg->next) seg->next->prev=seg->prev;
 332              		.loc 1 73 24
 333 01b8 2334F700 		sd	a5,8(a4)
  74:src/MemoryAllocator.cpp ****         seg=seg->prev;
 334              		.loc 1 74 9 is_stmt 1
 335 01bc 63860700 		beqz	a5,.L19
  74:src/MemoryAllocator.cpp ****         seg=seg->prev;
 336              		.loc 1 74 23 discriminator 1
  74:src/MemoryAllocator.cpp ****         seg=seg->prev;
 337              		.loc 1 74 44 is_stmt 0 discriminator 1
 338 01c0 03B70400 		ld	a4,0(s1)
  74:src/MemoryAllocator.cpp ****         seg=seg->prev;
 339              		.loc 1 74 38 discriminator 1
 340 01c4 23B0E700 		sd	a4,0(a5)
 341              	.L19:
  75:src/MemoryAllocator.cpp ****     }
 342              		.loc 1 75 9 is_stmt 1
  75:src/MemoryAllocator.cpp ****     }
 343              		.loc 1 75 12 is_stmt 0
 344 01c8 83B40400 		ld	s1,0(s1)
 345              	.LVL21:
 346 01cc 6FF05FF9 		j	.L18
 347              	.L23:
  79:src/MemoryAllocator.cpp ****         seg->szBl=bytesToBlocks(seg->szBy-sizeof(FreeSeg));
 348              		.loc 1 79 9 is_stmt 1
  79:src/MemoryAllocator.cpp ****         seg->szBl=bytesToBlocks(seg->szBy-sizeof(FreeSeg));
 349              		.loc 1 79 33 is_stmt 0
 350 01d0 83378901 		ld	a5,24(s2)
  79:src/MemoryAllocator.cpp ****         seg->szBl=bytesToBlocks(seg->szBy-sizeof(FreeSeg));
 351              		.loc 1 79 19
 352 01d4 3305F500 		add	a0,a0,a5
 353 01d8 23BCA400 		sd	a0,24(s1)
  80:src/MemoryAllocator.cpp ****         seg->next=seg->next->next;
 354              		.loc 1 80 9 is_stmt 1
  80:src/MemoryAllocator.cpp ****         seg->next=seg->next->next;
 355              		.loc 1 80 32 is_stmt 0
 356 01dc 130505FE 		addi	a0,a0,-32
 357 01e0 97000000 		call	_ZN8MemAlloc13bytesToBlocksEm
 357      E7800000 
 358              	.LVL22:
  80:src/MemoryAllocator.cpp ****         seg->next=seg->next->next;
 359              		.loc 1 80 18
 360 01e8 23B8A400 		sd	a0,16(s1)
  81:src/MemoryAllocator.cpp ****         if(seg->next) seg->next->prev=seg;
 361              		.loc 1 81 9 is_stmt 1
  81:src/MemoryAllocator.cpp ****         if(seg->next) seg->next->prev=seg;
 362              		.loc 1 81 30 is_stmt 0
 363 01ec 83378900 		ld	a5,8(s2)
  81:src/MemoryAllocator.cpp ****         if(seg->next) seg->next->prev=seg;
 364              		.loc 1 81 18
 365 01f0 23B4F400 		sd	a5,8(s1)
  82:src/MemoryAllocator.cpp ****     }
 366              		.loc 1 82 9 is_stmt 1
 367 01f4 E38007F8 		beqz	a5,.L17
GAS LISTING /tmp/ccBvXSZl.s 			page 11


  82:src/MemoryAllocator.cpp ****     }
 368              		.loc 1 82 23 discriminator 1
  82:src/MemoryAllocator.cpp ****     }
 369              		.loc 1 82 38 is_stmt 0 discriminator 1
 370 01f8 23B09700 		sd	s1,0(a5)
  84:src/MemoryAllocator.cpp **** 
 371              		.loc 1 84 1 discriminator 1
 372 01fc 6FF09FF7 		j	.L17
 373              		.cfi_endproc
 374              	.LFE6:
 376              		.align	2
 377              		.globl	_ZN8MemAlloc8mem_freeEPv
 379              	_ZN8MemAlloc8mem_freeEPv:
 380              	.LFB5:
  35:src/MemoryAllocator.cpp ****     if(addr<HEAP_START_ADDR || addr>=HEAP_END_ADDR) return -1; //uopste ne pripada dinamickoj zoni
 381              		.loc 1 35 35 is_stmt 1
 382              		.cfi_startproc
 383              	.LVL23:
  36:src/MemoryAllocator.cpp ****     for(FreeSeg* tmp=headFree;tmp;tmp=tmp->next){
 384              		.loc 1 36 5
  36:src/MemoryAllocator.cpp ****     for(FreeSeg* tmp=headFree;tmp;tmp=tmp->next){
 385              		.loc 1 36 12 is_stmt 0
 386 0200 97070000 		la	a5,HEAP_START_ADDR
 386      83B70700 
 387 0208 83B70700 		ld	a5,0(a5)
  36:src/MemoryAllocator.cpp ****     for(FreeSeg* tmp=headFree;tmp;tmp=tmp->next){
 388              		.loc 1 36 5
 389 020c 63E8F50C 		bgtu	a5,a1,.L33
 390 0210 13870500 		mv	a4,a1
  36:src/MemoryAllocator.cpp ****     for(FreeSeg* tmp=headFree;tmp;tmp=tmp->next){
 391              		.loc 1 36 36 discriminator 2
 392 0214 97070000 		la	a5,HEAP_END_ADDR
 392      83B70700 
 393 021c 83B70700 		ld	a5,0(a5)
  36:src/MemoryAllocator.cpp ****     for(FreeSeg* tmp=headFree;tmp;tmp=tmp->next){
 394              		.loc 1 36 29 discriminator 2
 395 0220 63F2F50C 		bleu	a5,a1,.L34
  37:src/MemoryAllocator.cpp ****         if((uint8*)addr>=(uint8*)tmp && (uint8*)addr<(uint8*)tmp+tmp->szBy)
 396              		.loc 1 37 5 is_stmt 1
 397              	.LBB11:
  37:src/MemoryAllocator.cpp ****         if((uint8*)addr>=(uint8*)tmp && (uint8*)addr<(uint8*)tmp+tmp->szBy)
 398              		.loc 1 37 18 is_stmt 0
 399 0224 03360500 		ld	a2,0(a0)
 400              	.LVL24:
 401 0228 93070600 		mv	a5,a2
 402 022c 6F008000 		j	.L28
 403              	.LVL25:
 404              	.L27:
  37:src/MemoryAllocator.cpp ****         if((uint8*)addr>=(uint8*)tmp && (uint8*)addr<(uint8*)tmp+tmp->szBy)
 405              		.loc 1 37 5 is_stmt 1 discriminator 2
  37:src/MemoryAllocator.cpp ****         if((uint8*)addr>=(uint8*)tmp && (uint8*)addr<(uint8*)tmp+tmp->szBy)
 406              		.loc 1 37 38 is_stmt 0 discriminator 2
 407 0230 83B78700 		ld	a5,8(a5)
 408              	.LVL26:
 409              	.L28:
  37:src/MemoryAllocator.cpp ****         if((uint8*)addr>=(uint8*)tmp && (uint8*)addr<(uint8*)tmp+tmp->szBy)
 410              		.loc 1 37 31 is_stmt 1 discriminator 1
GAS LISTING /tmp/ccBvXSZl.s 			page 12


 411 0234 638E0700 		beqz	a5,.L26
  38:src/MemoryAllocator.cpp ****             return -2; // nije alociran da bi se dealocirao
 412              		.loc 1 38 9
 413 0238 E36CF7FE 		bgtu	a5,a4,.L27
  38:src/MemoryAllocator.cpp ****             return -2; // nije alociran da bi se dealocirao
 414              		.loc 1 38 71 is_stmt 0 discriminator 1
 415 023c 83B68701 		ld	a3,24(a5)
  38:src/MemoryAllocator.cpp ****             return -2; // nije alociran da bi se dealocirao
 416              		.loc 1 38 65 discriminator 1
 417 0240 B386D700 		add	a3,a5,a3
  38:src/MemoryAllocator.cpp ****             return -2; // nije alociran da bi se dealocirao
 418              		.loc 1 38 38 discriminator 1
 419 0244 E376D7FE 		bleu	a3,a4,.L27
  39:src/MemoryAllocator.cpp ****     }
 420              		.loc 1 39 21
 421 0248 1305E0FF 		li	a0,-2
 422              	.LVL27:
 423              	.LBE11:
  66:src/MemoryAllocator.cpp **** 
 424              		.loc 1 66 1
 425 024c 67800000 		ret
 426              	.LVL28:
 427              	.L26:
  42:src/MemoryAllocator.cpp ****     if(!headFree) {
 428              		.loc 1 42 5 is_stmt 1
  42:src/MemoryAllocator.cpp ****     if(!headFree) {
 429              		.loc 1 42 14 is_stmt 0
 430 0250 930507FE 		addi	a1,a4,-32
 431              	.LVL29:
  43:src/MemoryAllocator.cpp ****         headFree=newSeg;
 432              		.loc 1 43 5 is_stmt 1
 433 0254 63000604 		beqz	a2,.L39
  35:src/MemoryAllocator.cpp ****     if(addr<HEAP_START_ADDR || addr>=HEAP_END_ADDR) return -1; //uopste ne pripada dinamickoj zoni
 434              		.loc 1 35 35 is_stmt 0
 435 0258 130101FF 		addi	sp,sp,-16
 436              		.cfi_def_cfa_offset 16
 437 025c 23341100 		sd	ra,8(sp)
 438 0260 23308100 		sd	s0,0(sp)
 439              		.cfi_offset 1, -8
 440              		.cfi_offset 8, -16
 441 0264 13040101 		addi	s0,sp,16
 442              		.cfi_def_cfa 8, 0
  49:src/MemoryAllocator.cpp ****         newSeg->next=headFree;
 443              		.loc 1 49 5 is_stmt 1
 444              	.LBB12:
 445 0268 63F2C504 		bleu	a2,a1,.L30
  50:src/MemoryAllocator.cpp ****         headFree->prev=newSeg;
 446              		.loc 1 50 9
  50:src/MemoryAllocator.cpp ****         headFree->prev=newSeg;
 447              		.loc 1 50 21 is_stmt 0
 448 026c 2334C7FE 		sd	a2,-24(a4)
  51:src/MemoryAllocator.cpp ****         headFree=newSeg;
 449              		.loc 1 51 9 is_stmt 1
  51:src/MemoryAllocator.cpp ****         headFree=newSeg;
 450              		.loc 1 51 23 is_stmt 0
 451 0270 2330B600 		sd	a1,0(a2)
  52:src/MemoryAllocator.cpp ****     }else{
GAS LISTING /tmp/ccBvXSZl.s 			page 13


 452              		.loc 1 52 9 is_stmt 1
  52:src/MemoryAllocator.cpp ****     }else{
 453              		.loc 1 52 17 is_stmt 0
 454 0274 2330B500 		sd	a1,0(a0)
 455              	.LVL30:
 456              	.L31:
 457              	.LBE12:
  64:src/MemoryAllocator.cpp ****     return 0;
 458              		.loc 1 64 5 is_stmt 1
  64:src/MemoryAllocator.cpp ****     return 0;
 459              		.loc 1 64 15 is_stmt 0
 460 0278 97000000 		call	_ZN8MemAlloc10tryToMergeEPNS_7FreeSegE
 460      E7800000 
 461              	.LVL31:
  65:src/MemoryAllocator.cpp **** }
 462              		.loc 1 65 5 is_stmt 1
  65:src/MemoryAllocator.cpp **** }
 463              		.loc 1 65 12 is_stmt 0
 464 0280 13050000 		li	a0,0
  66:src/MemoryAllocator.cpp **** 
 465              		.loc 1 66 1
 466 0284 83308100 		ld	ra,8(sp)
 467              		.cfi_restore 1
 468 0288 03340100 		ld	s0,0(sp)
 469              		.cfi_restore 8
 470              		.cfi_def_cfa 2, 16
 471 028c 13010101 		addi	sp,sp,16
 472              		.cfi_def_cfa_offset 0
 473 0290 67800000 		jr	ra
 474              	.LVL32:
 475              	.L39:
  44:src/MemoryAllocator.cpp ****         headFree->next= nullptr;
 476              		.loc 1 44 9 is_stmt 1
  44:src/MemoryAllocator.cpp ****         headFree->next= nullptr;
 477              		.loc 1 44 17 is_stmt 0
 478 0294 2330B500 		sd	a1,0(a0)
  45:src/MemoryAllocator.cpp ****         headFree->prev= nullptr;
 479              		.loc 1 45 9 is_stmt 1
  45:src/MemoryAllocator.cpp ****         headFree->prev= nullptr;
 480              		.loc 1 45 23 is_stmt 0
 481 0298 23B40500 		sd	zero,8(a1)
  46:src/MemoryAllocator.cpp ****         return 0;
 482              		.loc 1 46 9 is_stmt 1
 483 029c 83370500 		ld	a5,0(a0)
 484              	.LVL33:
  46:src/MemoryAllocator.cpp ****         return 0;
 485              		.loc 1 46 23 is_stmt 0
 486 02a0 23B00700 		sd	zero,0(a5)
  47:src/MemoryAllocator.cpp ****     }
 487              		.loc 1 47 9 is_stmt 1
  47:src/MemoryAllocator.cpp ****     }
 488              		.loc 1 47 16 is_stmt 0
 489 02a4 13050000 		li	a0,0
 490              	.LVL34:
 491 02a8 67800000 		ret
 492              	.LVL35:
 493              	.L30:
GAS LISTING /tmp/ccBvXSZl.s 			page 14


 494              		.cfi_def_cfa_register 8
 495              		.cfi_offset 1, -8
 496              		.cfi_offset 8, -16
 497              	.LBB14:
 498              	.LBB13:
  55:src/MemoryAllocator.cpp ****             if((uint8 *) newSeg > (uint8*) tmp &&
 499              		.loc 1 55 35 is_stmt 1 discriminator 1
 500 02ac 93070600 		mv	a5,a2
 501 02b0 03368600 		ld	a2,8(a2)
 502              	.LVL36:
 503 02b4 63060600 		beqz	a2,.L32
  56:src/MemoryAllocator.cpp ****                (uint8* ) newSeg < (uint8*) tmp->next) break;
 504              		.loc 1 56 13
 505 02b8 E3FAB7FE 		bgeu	a5,a1,.L30
  56:src/MemoryAllocator.cpp ****                (uint8* ) newSeg < (uint8*) tmp->next) break;
 506              		.loc 1 56 48 is_stmt 0 discriminator 1
 507 02bc E3F8C5FE 		bleu	a2,a1,.L30
 508              	.L32:
  59:src/MemoryAllocator.cpp ****         newSeg->prev = tmp;
 509              		.loc 1 59 9 is_stmt 1
  59:src/MemoryAllocator.cpp ****         newSeg->prev = tmp;
 510              		.loc 1 59 22 is_stmt 0
 511 02c0 2334C7FE 		sd	a2,-24(a4)
  60:src/MemoryAllocator.cpp ****         tmp->next = newSeg;
 512              		.loc 1 60 9 is_stmt 1
  60:src/MemoryAllocator.cpp ****         tmp->next = newSeg;
 513              		.loc 1 60 22 is_stmt 0
 514 02c4 2330F7FE 		sd	a5,-32(a4)
  61:src/MemoryAllocator.cpp ****         if (newSeg->next) newSeg->next->prev = newSeg;
 515              		.loc 1 61 9 is_stmt 1
  61:src/MemoryAllocator.cpp ****         if (newSeg->next) newSeg->next->prev = newSeg;
 516              		.loc 1 61 19 is_stmt 0
 517 02c8 23B4B700 		sd	a1,8(a5)
  62:src/MemoryAllocator.cpp ****     }
 518              		.loc 1 62 9 is_stmt 1
  62:src/MemoryAllocator.cpp ****     }
 519              		.loc 1 62 21 is_stmt 0
 520 02cc 833787FE 		ld	a5,-24(a4)
 521              	.LVL37:
  62:src/MemoryAllocator.cpp ****     }
 522              		.loc 1 62 9
 523 02d0 E38407FA 		beqz	a5,.L31
  62:src/MemoryAllocator.cpp ****     }
 524              		.loc 1 62 27 is_stmt 1 discriminator 1
  62:src/MemoryAllocator.cpp ****     }
 525              		.loc 1 62 46 is_stmt 0 discriminator 1
 526 02d4 23B0B700 		sd	a1,0(a5)
 527 02d8 6FF01FFA 		j	.L31
 528              	.LVL38:
 529              	.L33:
 530              		.cfi_def_cfa_register 2
 531              		.cfi_restore 1
 532              		.cfi_restore 8
 533              	.LBE13:
 534              	.LBE14:
  36:src/MemoryAllocator.cpp ****     for(FreeSeg* tmp=headFree;tmp;tmp=tmp->next){
 535              		.loc 1 36 61
GAS LISTING /tmp/ccBvXSZl.s 			page 15


 536 02dc 1305F0FF 		li	a0,-1
 537              	.LVL39:
 538 02e0 67800000 		ret
 539              	.LVL40:
 540              	.L34:
 541 02e4 1305F0FF 		li	a0,-1
 542              	.LVL41:
 543 02e8 67800000 		ret
 544              		.cfi_endproc
 545              	.LFE5:
 547              	.Letext0:
 548              		.file 2 "src/../h/../lib/hw.h"
 549              		.file 3 "src/../h/MemoryAllocator.h"
GAS LISTING /tmp/ccBvXSZl.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccBvXSZl.s:9      .text:0000000000000000 _ZN8MemAlloc13bytesToBlocksEm
     /tmp/ccBvXSZl.s:13     .text:0000000000000000 .L0 
     /tmp/ccBvXSZl.s:15     .text:0000000000000000 .L0 
     /tmp/ccBvXSZl.s:16     .text:0000000000000004 .L0 
     /tmp/ccBvXSZl.s:18     .text:0000000000000008 .L0 
     /tmp/ccBvXSZl.s:20     .text:000000000000000c .L0 
     /tmp/ccBvXSZl.s:22     .text:000000000000000c .L0 
     /tmp/ccBvXSZl.s:23     .text:000000000000000c .L0 
     /tmp/ccBvXSZl.s:26     .text:0000000000000014 .L0 
     /tmp/ccBvXSZl.s:27     .text:0000000000000014 .L0 
     /tmp/ccBvXSZl.s:29     .text:0000000000000018 .L0 
     /tmp/ccBvXSZl.s:31     .text:000000000000001c .L0 
     /tmp/ccBvXSZl.s:37     .text:000000000000001c _ZN8MemAlloc9mem_allocEm
     /tmp/ccBvXSZl.s:40     .text:000000000000001c .L0 
     /tmp/ccBvXSZl.s:42     .text:000000000000001c .L0 
     /tmp/ccBvXSZl.s:43     .text:0000000000000020 .L0 
     /tmp/ccBvXSZl.s:50     .text:0000000000000038 .L0 
     /tmp/ccBvXSZl.s:51     .text:0000000000000038 .L0 
     /tmp/ccBvXSZl.s:52     .text:0000000000000038 .L0 
     /tmp/ccBvXSZl.s:53     .text:0000000000000038 .L0 
     /tmp/ccBvXSZl.s:54     .text:0000000000000038 .L0 
     /tmp/ccBvXSZl.s:55     .text:0000000000000038 .L0 
     /tmp/ccBvXSZl.s:57     .text:000000000000003c .L0 
     /tmp/ccBvXSZl.s:62     .text:0000000000000044 .L0 
     /tmp/ccBvXSZl.s:64     .text:0000000000000044 .L0 
     /tmp/ccBvXSZl.s:65     .text:0000000000000044 .L0 
     /tmp/ccBvXSZl.s:69     .text:0000000000000048 .L0 
     /tmp/ccBvXSZl.s:72     .text:000000000000004c .L0 
     /tmp/ccBvXSZl.s:73     .text:000000000000004c .L0 
     /tmp/ccBvXSZl.s:75     .text:0000000000000050 .L0 
     /tmp/ccBvXSZl.s:78     .text:0000000000000054 .L0 
     /tmp/ccBvXSZl.s:81     .text:0000000000000058 .L0 
     /tmp/ccBvXSZl.s:82     .text:0000000000000058 .L0 
     /tmp/ccBvXSZl.s:84     .text:000000000000005c .L0 
     /tmp/ccBvXSZl.s:86     .text:0000000000000060 .L0 
     /tmp/ccBvXSZl.s:89     .text:0000000000000064 .L0 
     /tmp/ccBvXSZl.s:90     .text:0000000000000064 .L0 
     /tmp/ccBvXSZl.s:92     .text:0000000000000068 .L0 
     /tmp/ccBvXSZl.s:94     .text:000000000000006c .L0 
     /tmp/ccBvXSZl.s:95     .text:000000000000006c .L0 
     /tmp/ccBvXSZl.s:97     .text:0000000000000070 .L0 
     /tmp/ccBvXSZl.s:99     .text:0000000000000074 .L0 
     /tmp/ccBvXSZl.s:100    .text:0000000000000074 .L0 
     /tmp/ccBvXSZl.s:103    .text:0000000000000078 .L0 
     /tmp/ccBvXSZl.s:105    .text:000000000000007c .L0 
     /tmp/ccBvXSZl.s:107    .text:0000000000000080 .L0 
     /tmp/ccBvXSZl.s:109    .text:0000000000000084 .L0 
     /tmp/ccBvXSZl.s:110    .text:0000000000000084 .L0 
     /tmp/ccBvXSZl.s:114    .text:0000000000000090 .L0 
     /tmp/ccBvXSZl.s:116    .text:0000000000000094 .L0 
     /tmp/ccBvXSZl.s:117    .text:0000000000000094 .L0 
     /tmp/ccBvXSZl.s:119    .text:0000000000000098 .L0 
     /tmp/ccBvXSZl.s:121    .text:000000000000009c .L0 
     /tmp/ccBvXSZl.s:122    .text:000000000000009c .L0 
     /tmp/ccBvXSZl.s:125    .text:00000000000000a0 .L0 
GAS LISTING /tmp/ccBvXSZl.s 			page 17


     /tmp/ccBvXSZl.s:126    .text:00000000000000a0 .L0 
     /tmp/ccBvXSZl.s:128    .text:00000000000000a4 .L0 
     /tmp/ccBvXSZl.s:130    .text:00000000000000a8 .L0 
     /tmp/ccBvXSZl.s:131    .text:00000000000000a8 .L0 
     /tmp/ccBvXSZl.s:134    .text:00000000000000ac .L0 
     /tmp/ccBvXSZl.s:135    .text:00000000000000ac .L0 
     /tmp/ccBvXSZl.s:137    .text:00000000000000b0 .L0 
     /tmp/ccBvXSZl.s:143    .text:00000000000000b4 .L0 
     /tmp/ccBvXSZl.s:144    .text:00000000000000b4 .L0 
     /tmp/ccBvXSZl.s:146    .text:00000000000000b8 .L0 
     /tmp/ccBvXSZl.s:148    .text:00000000000000bc .L0 
     /tmp/ccBvXSZl.s:150    .text:00000000000000c0 .L0 
     /tmp/ccBvXSZl.s:151    .text:00000000000000c0 .L0 
     /tmp/ccBvXSZl.s:153    .text:00000000000000c4 .L0 
     /tmp/ccBvXSZl.s:154    .text:00000000000000c4 .L0 
     /tmp/ccBvXSZl.s:159    .text:00000000000000c8 .L0 
     /tmp/ccBvXSZl.s:161    .text:00000000000000c8 .L0 
     /tmp/ccBvXSZl.s:162    .text:00000000000000c8 .L0 
     /tmp/ccBvXSZl.s:164    .text:00000000000000d0 .L0 
     /tmp/ccBvXSZl.s:165    .text:00000000000000d0 .L0 
     /tmp/ccBvXSZl.s:167    .text:00000000000000d4 .L0 
     /tmp/ccBvXSZl.s:168    .text:00000000000000d4 .L0 
     /tmp/ccBvXSZl.s:170    .text:00000000000000d8 .L0 
     /tmp/ccBvXSZl.s:172    .text:00000000000000dc .L0 
     /tmp/ccBvXSZl.s:175    .text:00000000000000e0 .L0 
     /tmp/ccBvXSZl.s:177    .text:00000000000000e4 .L0 
     /tmp/ccBvXSZl.s:180    .text:00000000000000e8 .L0 
     /tmp/ccBvXSZl.s:184    .text:00000000000000ec .L0 
     /tmp/ccBvXSZl.s:189    .text:00000000000000ec .L0 
     /tmp/ccBvXSZl.s:190    .text:00000000000000ec .L0 
     /tmp/ccBvXSZl.s:191    .text:00000000000000ec .L0 
     /tmp/ccBvXSZl.s:194    .text:00000000000000f0 .L0 
     /tmp/ccBvXSZl.s:199    .text:00000000000000f4 .L0 
     /tmp/ccBvXSZl.s:200    .text:00000000000000f4 .L0 
     /tmp/ccBvXSZl.s:202    .text:00000000000000f8 .L0 
     /tmp/ccBvXSZl.s:204    .text:00000000000000fc .L0 
     /tmp/ccBvXSZl.s:205    .text:00000000000000fc .L0 
     /tmp/ccBvXSZl.s:207    .text:0000000000000100 .L0 
     /tmp/ccBvXSZl.s:210    .text:0000000000000104 .L0 
     /tmp/ccBvXSZl.s:211    .text:0000000000000104 .L0 
     /tmp/ccBvXSZl.s:213    .text:0000000000000108 .L0 
     /tmp/ccBvXSZl.s:215    .text:000000000000010c .L0 
     /tmp/ccBvXSZl.s:216    .text:000000000000010c .L0 
     /tmp/ccBvXSZl.s:218    .text:0000000000000110 .L0 
     /tmp/ccBvXSZl.s:221    .text:0000000000000114 .L0 
     /tmp/ccBvXSZl.s:222    .text:0000000000000114 .L0 
     /tmp/ccBvXSZl.s:224    .text:0000000000000118 .L0 
     /tmp/ccBvXSZl.s:226    .text:000000000000011c .L0 
     /tmp/ccBvXSZl.s:227    .text:000000000000011c .L0 
     /tmp/ccBvXSZl.s:229    .text:0000000000000120 .L0 
     /tmp/ccBvXSZl.s:235    .text:0000000000000128 .L0 
     /tmp/ccBvXSZl.s:236    .text:0000000000000128 .L0 
     /tmp/ccBvXSZl.s:242    .text:0000000000000130 .L0 
     /tmp/ccBvXSZl.s:248    .text:0000000000000130 _ZN8MemAlloc10tryToMergeEPNS_7FreeSegE
     /tmp/ccBvXSZl.s:251    .text:0000000000000130 .L0 
     /tmp/ccBvXSZl.s:253    .text:0000000000000130 .L0 
     /tmp/ccBvXSZl.s:254    .text:0000000000000134 .L0 
GAS LISTING /tmp/ccBvXSZl.s 			page 18


     /tmp/ccBvXSZl.s:259    .text:0000000000000144 .L0 
     /tmp/ccBvXSZl.s:260    .text:0000000000000144 .L0 
     /tmp/ccBvXSZl.s:261    .text:0000000000000144 .L0 
     /tmp/ccBvXSZl.s:262    .text:0000000000000144 .L0 
     /tmp/ccBvXSZl.s:264    .text:0000000000000148 .L0 
     /tmp/ccBvXSZl.s:267    .text:000000000000014c .L0 
     /tmp/ccBvXSZl.s:268    .text:000000000000014c .L0 
     /tmp/ccBvXSZl.s:270    .text:0000000000000150 .L0 
     /tmp/ccBvXSZl.s:272    .text:0000000000000154 .L0 
     /tmp/ccBvXSZl.s:274    .text:0000000000000158 .L0 
     /tmp/ccBvXSZl.s:276    .text:000000000000015c .L0 
     /tmp/ccBvXSZl.s:280    .text:0000000000000160 .L0 
     /tmp/ccBvXSZl.s:281    .text:0000000000000160 .L0 
     /tmp/ccBvXSZl.s:283    .text:0000000000000164 .L0 
     /tmp/ccBvXSZl.s:285    .text:0000000000000168 .L0 
     /tmp/ccBvXSZl.s:287    .text:000000000000016c .L0 
     /tmp/ccBvXSZl.s:289    .text:0000000000000170 .L0 
     /tmp/ccBvXSZl.s:292    .text:0000000000000174 .L0 
     /tmp/ccBvXSZl.s:293    .text:0000000000000178 .L0 
     /tmp/ccBvXSZl.s:294    .text:0000000000000178 .L0 
     /tmp/ccBvXSZl.s:296    .text:000000000000017c .L0 
     /tmp/ccBvXSZl.s:297    .text:000000000000017c .L0 
     /tmp/ccBvXSZl.s:299    .text:0000000000000180 .L0 
     /tmp/ccBvXSZl.s:302    .text:0000000000000184 .L0 
     /tmp/ccBvXSZl.s:304    .text:0000000000000188 .L0 
     /tmp/ccBvXSZl.s:308    .text:000000000000018c .L0 
     /tmp/ccBvXSZl.s:310    .text:000000000000018c .L0 
     /tmp/ccBvXSZl.s:311    .text:000000000000018c .L0 
     /tmp/ccBvXSZl.s:313    .text:0000000000000190 .L0 
     /tmp/ccBvXSZl.s:316    .text:0000000000000198 .L0 
     /tmp/ccBvXSZl.s:317    .text:0000000000000198 .L0 
     /tmp/ccBvXSZl.s:319    .text:000000000000019c .L0 
     /tmp/ccBvXSZl.s:322    .text:00000000000001a0 .L0 
     /tmp/ccBvXSZl.s:326    .text:00000000000001ac .L0 
     /tmp/ccBvXSZl.s:328    .text:00000000000001b0 .L0 
     /tmp/ccBvXSZl.s:329    .text:00000000000001b0 .L0 
     /tmp/ccBvXSZl.s:331    .text:00000000000001b4 .L0 
     /tmp/ccBvXSZl.s:333    .text:00000000000001b8 .L0 
     /tmp/ccBvXSZl.s:335    .text:00000000000001bc .L0 
     /tmp/ccBvXSZl.s:337    .text:00000000000001c0 .L0 
     /tmp/ccBvXSZl.s:338    .text:00000000000001c0 .L0 
     /tmp/ccBvXSZl.s:340    .text:00000000000001c4 .L0 
     /tmp/ccBvXSZl.s:343    .text:00000000000001c8 .L0 
     /tmp/ccBvXSZl.s:344    .text:00000000000001c8 .L0 
     /tmp/ccBvXSZl.s:349    .text:00000000000001d0 .L0 
     /tmp/ccBvXSZl.s:350    .text:00000000000001d0 .L0 
     /tmp/ccBvXSZl.s:352    .text:00000000000001d4 .L0 
     /tmp/ccBvXSZl.s:355    .text:00000000000001dc .L0 
     /tmp/ccBvXSZl.s:356    .text:00000000000001dc .L0 
     /tmp/ccBvXSZl.s:360    .text:00000000000001e8 .L0 
     /tmp/ccBvXSZl.s:362    .text:00000000000001ec .L0 
     /tmp/ccBvXSZl.s:363    .text:00000000000001ec .L0 
     /tmp/ccBvXSZl.s:365    .text:00000000000001f0 .L0 
     /tmp/ccBvXSZl.s:367    .text:00000000000001f4 .L0 
     /tmp/ccBvXSZl.s:369    .text:00000000000001f8 .L0 
     /tmp/ccBvXSZl.s:370    .text:00000000000001f8 .L0 
     /tmp/ccBvXSZl.s:372    .text:00000000000001fc .L0 
GAS LISTING /tmp/ccBvXSZl.s 			page 19


     /tmp/ccBvXSZl.s:373    .text:0000000000000200 .L0 
     /tmp/ccBvXSZl.s:379    .text:0000000000000200 _ZN8MemAlloc8mem_freeEPv
     /tmp/ccBvXSZl.s:382    .text:0000000000000200 .L0 
     /tmp/ccBvXSZl.s:384    .text:0000000000000200 .L0 
     /tmp/ccBvXSZl.s:385    .text:0000000000000200 .L0 
     /tmp/ccBvXSZl.s:386    .text:0000000000000200 .L0 
     /tmp/ccBvXSZl.s:389    .text:000000000000020c .L0 
     /tmp/ccBvXSZl.s:392    .text:0000000000000214 .L0 
     /tmp/ccBvXSZl.s:395    .text:0000000000000220 .L0 
     /tmp/ccBvXSZl.s:398    .text:0000000000000224 .L0 
     /tmp/ccBvXSZl.s:399    .text:0000000000000224 .L0 
     /tmp/ccBvXSZl.s:406    .text:0000000000000230 .L0 
     /tmp/ccBvXSZl.s:407    .text:0000000000000230 .L0 
     /tmp/ccBvXSZl.s:411    .text:0000000000000234 .L0 
     /tmp/ccBvXSZl.s:413    .text:0000000000000238 .L0 
     /tmp/ccBvXSZl.s:415    .text:000000000000023c .L0 
     /tmp/ccBvXSZl.s:417    .text:0000000000000240 .L0 
     /tmp/ccBvXSZl.s:419    .text:0000000000000244 .L0 
     /tmp/ccBvXSZl.s:421    .text:0000000000000248 .L0 
     /tmp/ccBvXSZl.s:425    .text:000000000000024c .L0 
     /tmp/ccBvXSZl.s:429    .text:0000000000000250 .L0 
     /tmp/ccBvXSZl.s:430    .text:0000000000000250 .L0 
     /tmp/ccBvXSZl.s:433    .text:0000000000000254 .L0 
     /tmp/ccBvXSZl.s:435    .text:0000000000000258 .L0 
     /tmp/ccBvXSZl.s:436    .text:000000000000025c .L0 
     /tmp/ccBvXSZl.s:439    .text:0000000000000264 .L0 
     /tmp/ccBvXSZl.s:440    .text:0000000000000264 .L0 
     /tmp/ccBvXSZl.s:442    .text:0000000000000268 .L0 
     /tmp/ccBvXSZl.s:445    .text:0000000000000268 .L0 
     /tmp/ccBvXSZl.s:447    .text:000000000000026c .L0 
     /tmp/ccBvXSZl.s:448    .text:000000000000026c .L0 
     /tmp/ccBvXSZl.s:450    .text:0000000000000270 .L0 
     /tmp/ccBvXSZl.s:451    .text:0000000000000270 .L0 
     /tmp/ccBvXSZl.s:453    .text:0000000000000274 .L0 
     /tmp/ccBvXSZl.s:454    .text:0000000000000274 .L0 
     /tmp/ccBvXSZl.s:459    .text:0000000000000278 .L0 
     /tmp/ccBvXSZl.s:460    .text:0000000000000278 .L0 
     /tmp/ccBvXSZl.s:463    .text:0000000000000280 .L0 
     /tmp/ccBvXSZl.s:464    .text:0000000000000280 .L0 
     /tmp/ccBvXSZl.s:466    .text:0000000000000284 .L0 
     /tmp/ccBvXSZl.s:467    .text:0000000000000288 .L0 
     /tmp/ccBvXSZl.s:469    .text:000000000000028c .L0 
     /tmp/ccBvXSZl.s:470    .text:000000000000028c .L0 
     /tmp/ccBvXSZl.s:472    .text:0000000000000290 .L0 
     /tmp/ccBvXSZl.s:477    .text:0000000000000294 .L0 
     /tmp/ccBvXSZl.s:478    .text:0000000000000294 .L0 
     /tmp/ccBvXSZl.s:480    .text:0000000000000298 .L0 
     /tmp/ccBvXSZl.s:481    .text:0000000000000298 .L0 
     /tmp/ccBvXSZl.s:483    .text:000000000000029c .L0 
     /tmp/ccBvXSZl.s:486    .text:00000000000002a0 .L0 
     /tmp/ccBvXSZl.s:488    .text:00000000000002a4 .L0 
     /tmp/ccBvXSZl.s:489    .text:00000000000002a4 .L0 
     /tmp/ccBvXSZl.s:494    .text:00000000000002ac .L0 
     /tmp/ccBvXSZl.s:495    .text:00000000000002ac .L0 
     /tmp/ccBvXSZl.s:496    .text:00000000000002ac .L0 
     /tmp/ccBvXSZl.s:500    .text:00000000000002ac .L0 
     /tmp/ccBvXSZl.s:505    .text:00000000000002b8 .L0 
GAS LISTING /tmp/ccBvXSZl.s 			page 20


     /tmp/ccBvXSZl.s:507    .text:00000000000002bc .L0 
     /tmp/ccBvXSZl.s:510    .text:00000000000002c0 .L0 
     /tmp/ccBvXSZl.s:511    .text:00000000000002c0 .L0 
     /tmp/ccBvXSZl.s:513    .text:00000000000002c4 .L0 
     /tmp/ccBvXSZl.s:514    .text:00000000000002c4 .L0 
     /tmp/ccBvXSZl.s:516    .text:00000000000002c8 .L0 
     /tmp/ccBvXSZl.s:517    .text:00000000000002c8 .L0 
     /tmp/ccBvXSZl.s:519    .text:00000000000002cc .L0 
     /tmp/ccBvXSZl.s:520    .text:00000000000002cc .L0 
     /tmp/ccBvXSZl.s:523    .text:00000000000002d0 .L0 
     /tmp/ccBvXSZl.s:525    .text:00000000000002d4 .L0 
     /tmp/ccBvXSZl.s:526    .text:00000000000002d4 .L0 
     /tmp/ccBvXSZl.s:530    .text:00000000000002dc .L0 
     /tmp/ccBvXSZl.s:531    .text:00000000000002dc .L0 
     /tmp/ccBvXSZl.s:532    .text:00000000000002dc .L0 
     /tmp/ccBvXSZl.s:536    .text:00000000000002dc .L0 
     /tmp/ccBvXSZl.s:544    .text:00000000000002ec .L0 
     /tmp/ccBvXSZl.s:550    .text:00000000000002ec .L0 
     /tmp/ccBvXSZl.s:386    .text:0000000000000200 .L0 
     /tmp/ccBvXSZl.s:392    .text:0000000000000214 .L0 
     /tmp/ccBvXSZl.s:160    .text:00000000000000c8 .L3
     /tmp/ccBvXSZl.s:183    .text:00000000000000ec .L14
     /tmp/ccBvXSZl.s:195    .text:00000000000000f4 .L15
     /tmp/ccBvXSZl.s:123    .text:00000000000000a0 .L11
     /tmp/ccBvXSZl.s:132    .text:00000000000000ac .L12
     /tmp/ccBvXSZl.s:232    .text:0000000000000128 .L16
     /tmp/ccBvXSZl.s:67     .text:0000000000000048 .L6
     /tmp/ccBvXSZl.s:208    .text:0000000000000104 .L8
     /tmp/ccBvXSZl.s:219    .text:0000000000000114 .L9
     /tmp/ccBvXSZl.s:139    .text:00000000000000b4 .L10
     /tmp/ccBvXSZl.s:278    .text:0000000000000160 .L18
     /tmp/ccBvXSZl.s:307    .text:000000000000018c .L22
     /tmp/ccBvXSZl.s:290    .text:0000000000000174 .L17
     /tmp/ccBvXSZl.s:347    .text:00000000000001d0 .L23
     /tmp/ccBvXSZl.s:341    .text:00000000000001c8 .L19
     /tmp/ccBvXSZl.s:529    .text:00000000000002dc .L33
     /tmp/ccBvXSZl.s:540    .text:00000000000002e4 .L34
     /tmp/ccBvXSZl.s:409    .text:0000000000000234 .L28
     /tmp/ccBvXSZl.s:427    .text:0000000000000250 .L26
     /tmp/ccBvXSZl.s:404    .text:0000000000000230 .L27
     /tmp/ccBvXSZl.s:475    .text:0000000000000294 .L39
     /tmp/ccBvXSZl.s:493    .text:00000000000002ac .L30
     /tmp/ccBvXSZl.s:508    .text:00000000000002c0 .L32
     /tmp/ccBvXSZl.s:456    .text:0000000000000278 .L31
     /tmp/ccBvXSZl.s:990    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccBvXSZl.s:1854   .debug_str:0000000000000116 .LASF36
     /tmp/ccBvXSZl.s:1874   .debug_str:0000000000000284 .LASF37
     /tmp/ccBvXSZl.s:1880   .debug_str:00000000000002b1 .LASF38
     /tmp/ccBvXSZl.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccBvXSZl.s:547    .text:00000000000002ec .Letext0
     /tmp/ccBvXSZl.s:1808   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccBvXSZl.s:1864   .debug_str:000000000000022d .LASF0
     /tmp/ccBvXSZl.s:1844   .debug_str:00000000000000d7 .LASF1
     /tmp/ccBvXSZl.s:1836   .debug_str:0000000000000099 .LASF2
     /tmp/ccBvXSZl.s:1886   .debug_str:00000000000002e7 .LASF3
     /tmp/ccBvXSZl.s:1822   .debug_str:0000000000000047 .LASF4
     /tmp/ccBvXSZl.s:1842   .debug_str:00000000000000c5 .LASF5
GAS LISTING /tmp/ccBvXSZl.s 			page 21


     /tmp/ccBvXSZl.s:1814   .debug_str:000000000000001c .LASF6
     /tmp/ccBvXSZl.s:1810   .debug_str:0000000000000000 .LASF7
     /tmp/ccBvXSZl.s:1832   .debug_str:0000000000000077 .LASF8
     /tmp/ccBvXSZl.s:1868   .debug_str:0000000000000241 .LASF9
     /tmp/ccBvXSZl.s:1820   .debug_str:0000000000000039 .LASF10
     /tmp/ccBvXSZl.s:1896   .debug_str:0000000000000325 .LASF11
     /tmp/ccBvXSZl.s:1834   .debug_str:000000000000008a .LASF12
     /tmp/ccBvXSZl.s:1888   .debug_str:00000000000002ed .LASF13
     /tmp/ccBvXSZl.s:1876   .debug_str:000000000000029c .LASF14
     /tmp/ccBvXSZl.s:1848   .debug_str:00000000000000f2 .LASF15
     /tmp/ccBvXSZl.s:1826   .debug_str:0000000000000053 .LASF16
     /tmp/ccBvXSZl.s:1872   .debug_str:000000000000026e .LASF17
     /tmp/ccBvXSZl.s:1862   .debug_str:0000000000000224 .LASF39
     /tmp/ccBvXSZl.s:1846   .debug_str:00000000000000ea .LASF40
     /tmp/ccBvXSZl.s:1894   .debug_str:0000000000000320 .LASF18
     /tmp/ccBvXSZl.s:1816   .debug_str:0000000000000023 .LASF19
     /tmp/ccBvXSZl.s:1878   .debug_str:00000000000002ac .LASF20
     /tmp/ccBvXSZl.s:1884   .debug_str:00000000000002e2 .LASF21
     /tmp/ccBvXSZl.s:1828   .debug_str:0000000000000069 .LASF22
     /tmp/ccBvXSZl.s:1858   .debug_str:0000000000000201 .LASF23
     /tmp/ccBvXSZl.s:1850   .debug_str:00000000000000fe .LASF24
     /tmp/ccBvXSZl.s:1856   .debug_str:00000000000001da .LASF26
     /tmp/ccBvXSZl.s:1882   .debug_str:00000000000002d4 .LASF25
     /tmp/ccBvXSZl.s:1860   .debug_str:0000000000000206 .LASF27
     /tmp/ccBvXSZl.s:1818   .debug_str:0000000000000028 .LASF41
     /tmp/ccBvXSZl.s:1892   .debug_str:0000000000000316 .LASF28
     /tmp/ccBvXSZl.s:1840   .debug_str:00000000000000ac .LASF30
     /tmp/ccBvXSZl.s:1812   .debug_str:0000000000000013 .LASF29
     /tmp/ccBvXSZl.s:1890   .debug_str:00000000000002fd .LASF31
     /tmp/ccBvXSZl.s:1852   .debug_str:0000000000000109 .LASF42
     /tmp/ccBvXSZl.s:1870   .debug_str:0000000000000251 .LASF43
     /tmp/ccBvXSZl.s:1824   .debug_str:000000000000004e .LASF32
     /tmp/ccBvXSZl.s:10     .text:0000000000000000 .LFB7
     /tmp/ccBvXSZl.s:32     .text:000000000000001c .LFE7
     /tmp/ccBvXSZl.s:1509   .debug_loc:0000000000000000 .LLST0
     /tmp/ccBvXSZl.s:249    .text:0000000000000130 .LFB6
     /tmp/ccBvXSZl.s:374    .text:0000000000000200 .LFE6
     /tmp/ccBvXSZl.s:1838   .debug_str:00000000000000a7 .LASF33
     /tmp/ccBvXSZl.s:1523   .debug_loc:0000000000000039 .LLST6
     /tmp/ccBvXSZl.s:1548   .debug_loc:000000000000009b .LLST7
     /tmp/ccBvXSZl.s:324    .text:00000000000001ac .LVL20
     /tmp/ccBvXSZl.s:358    .text:00000000000001e8 .LVL22
     /tmp/ccBvXSZl.s:380    .text:0000000000000200 .LFB5
     /tmp/ccBvXSZl.s:545    .text:00000000000002ec .LFE5
     /tmp/ccBvXSZl.s:1563   .debug_loc:00000000000000e4 .LLST8
     /tmp/ccBvXSZl.s:1830   .debug_str:0000000000000072 .LASF34
     /tmp/ccBvXSZl.s:1621   .debug_loc:00000000000001c1 .LLST9
     /tmp/ccBvXSZl.s:1866   .debug_str:000000000000023a .LASF35
     /tmp/ccBvXSZl.s:1647   .debug_loc:0000000000000233 .LLST10
     /tmp/ccBvXSZl.s:397    .text:0000000000000224 .LBB11
     /tmp/ccBvXSZl.s:423    .text:000000000000024c .LBE11
     /tmp/ccBvXSZl.s:1668   .debug_loc:0000000000000282 .LLST11
     /tmp/ccBvXSZl.s:498    .text:00000000000002ac .LBB13
     /tmp/ccBvXSZl.s:533    .text:00000000000002dc .LBE13
     /tmp/ccBvXSZl.s:1683   .debug_loc:00000000000002cb .LLST12
     /tmp/ccBvXSZl.s:461    .text:0000000000000280 .LVL31
     /tmp/ccBvXSZl.s:38     .text:000000000000001c .LFB4
GAS LISTING /tmp/ccBvXSZl.s 			page 22


     /tmp/ccBvXSZl.s:243    .text:0000000000000130 .LFE4
     /tmp/ccBvXSZl.s:1694   .debug_loc:0000000000000301 .LLST1
     /tmp/ccBvXSZl.s:1720   .debug_loc:0000000000000373 .LLST2
     /tmp/ccBvXSZl.s:1746   .debug_loc:00000000000003e5 .LLST3
     /tmp/ccBvXSZl.s:1794   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccBvXSZl.s:1759   .debug_loc:000000000000041d .LLST4
     /tmp/ccBvXSZl.s:1770   .debug_loc:0000000000000453 .LLST5
     /tmp/ccBvXSZl.s:112    .text:0000000000000090 .LVL7
     /tmp/ccBvXSZl.s:14     .text:0000000000000000 .LVL0
     /tmp/ccBvXSZl.s:24     .text:0000000000000010 .LVL1
     /tmp/ccBvXSZl.s:252    .text:0000000000000130 .LVL15
     /tmp/ccBvXSZl.s:277    .text:0000000000000160 .LVL16
     /tmp/ccBvXSZl.s:306    .text:000000000000018c .LVL18
     /tmp/ccBvXSZl.s:320    .text:00000000000001a0 .LVL19
     /tmp/ccBvXSZl.s:300    .text:0000000000000180 .LVL17
     /tmp/ccBvXSZl.s:383    .text:0000000000000200 .LVL23
     /tmp/ccBvXSZl.s:422    .text:000000000000024c .LVL27
     /tmp/ccBvXSZl.s:426    .text:0000000000000250 .LVL28
     /tmp/ccBvXSZl.s:474    .text:0000000000000294 .LVL32
     /tmp/ccBvXSZl.s:490    .text:00000000000002a8 .LVL34
     /tmp/ccBvXSZl.s:492    .text:00000000000002ac .LVL35
     /tmp/ccBvXSZl.s:537    .text:00000000000002e0 .LVL39
     /tmp/ccBvXSZl.s:539    .text:00000000000002e4 .LVL40
     /tmp/ccBvXSZl.s:542    .text:00000000000002e8 .LVL41
     /tmp/ccBvXSZl.s:431    .text:0000000000000254 .LVL29
     /tmp/ccBvXSZl.s:528    .text:00000000000002dc .LVL38
     /tmp/ccBvXSZl.s:400    .text:0000000000000228 .LVL24
     /tmp/ccBvXSZl.s:403    .text:0000000000000230 .LVL25
     /tmp/ccBvXSZl.s:455    .text:0000000000000278 .LVL30
     /tmp/ccBvXSZl.s:484    .text:00000000000002a0 .LVL33
     /tmp/ccBvXSZl.s:502    .text:00000000000002b4 .LVL36
     /tmp/ccBvXSZl.s:521    .text:00000000000002d0 .LVL37
     /tmp/ccBvXSZl.s:41     .text:000000000000001c .LVL2
     /tmp/ccBvXSZl.s:101    .text:0000000000000078 .LVL6
     /tmp/ccBvXSZl.s:178    .text:00000000000000e4 .LVL11
     /tmp/ccBvXSZl.s:182    .text:00000000000000ec .LVL12
     /tmp/ccBvXSZl.s:231    .text:0000000000000128 .LVL14
     /tmp/ccBvXSZl.s:173    .text:00000000000000dc .LVL10
     /tmp/ccBvXSZl.s:61     .text:0000000000000044 .LVL3
     /tmp/ccBvXSZl.s:155    .text:00000000000000c8 .LVL9
     /tmp/ccBvXSZl.s:66     .text:0000000000000048 .LVL4
     /tmp/ccBvXSZl.s:87     .text:0000000000000064 .LVL5
     /tmp/ccBvXSZl.s:138    .text:00000000000000b4 .LVL8
     /tmp/ccBvXSZl.s:551    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccBvXSZl.s:63     .text:0000000000000044 .LBB2
     /tmp/ccBvXSZl.s:158    .text:00000000000000c8 .LBE2
     /tmp/ccBvXSZl.s:185    .text:00000000000000ec .LBB10
     /tmp/ccBvXSZl.s:241    .text:0000000000000130 .LBE10
     /tmp/ccBvXSZl.s:79     .text:0000000000000058 .LBB5
     /tmp/ccBvXSZl.s:140    .text:00000000000000b4 .LBE5
     /tmp/ccBvXSZl.s:233    .text:0000000000000128 .LBB6
     /tmp/ccBvXSZl.s:238    .text:0000000000000130 .LBE6

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
